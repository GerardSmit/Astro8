@inject HttpClient Http
@inject IWorkerFactory WorkerFactory
@inject IJSInProcessRuntime Runtime

@code {

    protected override async Task OnInitializedAsync()
    {
        Runtime.Invoke<Nothing>("init");

        var code = await Http.GetStringAsync("code/snek.txt");
        var worker = await WorkerFactory.CreateAsync();

        var service = await worker.CreateBackgroundServiceAsync<CpuService>(options =>
        {
            options.AddAssemblies("Astro8.Emulator.dll", "Astro8.Blazor.Worker.dll");
        });

        await service.RegisterEventListenerAsync(
            nameof(CpuService.SetPixel),
            (object? _, int[] data) =>
            {
                Runtime.Invoke<Nothing>("setPixel", data);
            });

        await service.RunAsync(s => s.Start(code));
    }

}
